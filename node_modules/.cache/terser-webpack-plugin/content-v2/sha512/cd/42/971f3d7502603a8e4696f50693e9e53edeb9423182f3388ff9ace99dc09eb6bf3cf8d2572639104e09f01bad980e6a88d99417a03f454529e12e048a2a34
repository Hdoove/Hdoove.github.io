{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{255:function(t,s,a){\"use strict\";a.r(s);var e=a(28),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"渲染过程优化\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#渲染过程优化\"}},[t._v(\"#\")]),t._v(\" 渲染过程优化\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"一-为什么-js-阻塞页面加载\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一-为什么-js-阻塞页面加载\"}},[t._v(\"#\")]),t._v(\" 一.为什么 JS 阻塞页面加载 ?\")]),t._v(\" \"),a(\"p\",[t._v(\"由于 JavaScript 是可操纵 DOM 的,如果在修改这些元素属性同时渲染界面（即 JavaScript 线程和 UI 线程同时运行）,那么渲染线程前后获得的元素数据就可能不一致了。\")]),t._v(\" \"),a(\"p\",[t._v(\"因此为了防止渲染出现不可预期的结果,浏览器设置 \"),a(\"strong\",[t._v(\"GUI 渲染线程与 JavaScript 引擎为互斥\")]),t._v(\"的关系。\")]),t._v(\" \"),a(\"p\",[t._v(\"当 JavaScript 引擎执行时 GUI 线程会被挂起,GUI 更新会被保存在一个队列中等到引擎线程空闲时立即被执行。\")]),t._v(\" \"),a(\"p\",[t._v(\"从上面我们可以推理出,由于 GUI 渲染线程与 JavaScript 执行线程是互斥的关系,\")]),t._v(\" \"),a(\"p\",[t._v(\"当浏览器在执行 JavaScript 程序的时候,GUI 渲染线程会被保存在一个队列中,直到 JS 程序执行完成,才会接着执行。\")]),t._v(\" \"),a(\"p\",[t._v(\"因此如果 JS 执行的时间过长,这样就会造成页面的渲染不连贯,导致页面渲染加载阻塞的感觉。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"二-css-加载会造成阻塞吗-？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二-css-加载会造成阻塞吗-？\"}},[t._v(\"#\")]),t._v(\" 二.css 加载会造成阻塞吗 ？\")]),t._v(\" \"),a(\"p\",[t._v(\"DOM 解析和 CSS 解析是两个并行的进程,所以 \"),a(\"strong\",[t._v(\"CSS 加载不会阻塞 DOM 的解析\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"然而,由于 Render Tree 是依赖于 DOM Tree 和 CSSOM Tree 的,\")]),t._v(\" \"),a(\"p\",[t._v(\"所以他必须等待到 CSSOM Tree 构建完成,也就是 CSS 资源加载完成(或者 CSS 资源加载失败)后,才能开始渲染。\")]),t._v(\" \"),a(\"p\",[t._v(\"因此,\"),a(\"strong\",[t._v(\"CSS 加载会阻塞 Dom 的渲染\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"由于 JavaScript 是可操纵 DOM 和 css 样式 的,如果在修改这些元素属性同时渲染界面（即 JavaScript 线程和 UI 线程同时运行）,那么渲染线程前后获得的元素数据就可能不一致了。\")]),t._v(\" \"),a(\"p\",[t._v(\"因此为了防止渲染出现不可预期的结果,浏览器设置 \"),a(\"strong\",[t._v(\"GUI 渲染线程与 JavaScript 引擎为互斥\")]),t._v(\"的关系。\")]),t._v(\" \"),a(\"p\",[t._v(\"因此,样式表会在后面的 js 执行前先加载执行完毕,所以\"),a(\"strong\",[t._v(\"css 会阻塞后面 js 的执行\")]),t._v(\"。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"三-domcontentloaded-与-load-的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三-domcontentloaded-与-load-的区别\"}},[t._v(\"#\")]),t._v(\" 三.DOMContentLoaded 与 load 的区别 ?\")]),t._v(\" \"),a(\"p\",[t._v(\"当 DOMContentLoaded 事件触发时,仅当 DOM 解析完成后,不包括样式表,图片。我们前面提到 \"),a(\"strong\",[t._v(\"CSS 加载会阻塞 Dom 的渲染和后面 js 的执行,js 会阻塞 Dom 解析\")]),t._v(\",所以我们可以得到结论:\\n当文档中没有脚本时,浏览器解析完文档便能触发 DOMContentLoaded 事件。如果文档中包含脚本,则脚本会阻塞文档的解析,而脚本需要等 CSSOM 构建完成才能执行。在任何情况下,DOMContentLoaded 的触发不需要等待图片等其他资源加载完成。\")]),t._v(\" \"),a(\"p\",[t._v(\"当 onload 事件触发时,页面上所有的 DOM,样式表,脚本,图片等资源已经加载完毕。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"四-defer-和-async-的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四-defer-和-async-的区别\"}},[t._v(\"#\")]),t._v(\" 四.defer 和 async 的区别 ?\")]),t._v(\" \"),a(\"p\",[t._v(\"当浏览器碰到 script 脚本的时候 :\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"code\",[t._v('<script src=\"script.js\">')])])]),t._v(\" \"),a(\"p\",[t._v(\"没有 defer 或 async,浏览器会立即加载并执行指定的脚本,“立即”指的是在渲染该 script 标签之下的文档元素之前,也就是说不等待后续载入的文档元素,读到就加载并执行。\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[a(\"code\",[t._v('<script async src=\"script.js\">')])])]),t._v(\" \"),a(\"p\",[t._v(\"有 async,加载和渲染后续文档元素的过程将和 script.js 的加载与执行并行进行（异步）。\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[a(\"code\",[t._v('<script defer src=\"myscript.js\">')])])]),t._v(\" \"),a(\"p\",[t._v(\"有 defer,加载后续文档元素的过程将和 script.js 的加载并行进行（异步）,但是 script.js 的执行要在所有元素解析完成之后,DOMContentLoaded 事件触发之前完成。\")]),t._v(\" \"),a(\"p\",[t._v(\"从实用角度来说,首先把所有脚本都丢到 \"),a(\"code\",[t._v(\"</body>\")]),t._v(\" 之前是最佳实践,因为对于旧浏览器来说这是唯一的优化选择,此法可保证非脚本的其他一切元素能够以最快的速度得到加载和解析。\")]),t._v(\" \"),a(\"p\",[t._v(\"接着,我们来看一张图:\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/7/16f7edfaa3e8c6ee?imageslim\",alt:\"img\"}})]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"defer 和 async 在网络读取（下载）这块儿是一样的,都是异步的（相较于 HTML 解析）\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"它俩的差别在于脚本下载完之后何时执行,显然 defer 是最接近我们对于应用脚本加载和执行的要求的\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"关于 defer,此图未尽之处在于它是按照加载顺序执行脚本的,这一点要善加利用\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"async 则是一个乱序执行的主,反正对它来说脚本的加载和执行是紧紧挨着的,所以不管你声明的顺序如何,只要它加载完了就会立刻执行\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"仔细想想,async 对于应用脚本的用处不大,因为它完全不考虑依赖（哪怕是最低级的顺序执行）,不过它对于那些可以不依赖任何脚本或不被任何脚本依赖的脚本来说却是非常合适的。\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"回流和重绘\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#回流和重绘\"}},[t._v(\"#\")]),t._v(\" 回流和重绘\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"回流必将引起重绘-重绘不一定会引起回流\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#回流必将引起重绘-重绘不一定会引起回流\"}},[t._v(\"#\")]),t._v(\" 回流必将引起重绘,重绘不一定会引起回流\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-回流\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-回流\"}},[t._v(\"#\")]),t._v(\" 1.回流\")]),t._v(\" \"),a(\"p\",[t._v(\"当 Render Tree 中部分或全部元素的尺寸、结构、或某些属性发生改变时,浏览器重新渲染部分或全部文档的过程称为回流。\")]),t._v(\" \"),a(\"p\",[t._v(\"会导致回流的操作\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"页面首次渲染\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"浏览器窗口大小发生改变\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"元素尺寸或位置发生改变元素内容变化（文字数量或图片大小等等）\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"元素字体大小变化\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"添加或者删除可见的 DOM 元素\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"激活 CSS 伪类（例如：:hover）\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"查询某些属性或调用某些方法\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"clientWidth、clientHeight、clientTop、clientLeft、offsetWidth、offsetHeight、offsetTop、offsetLeft、scrollWidth、scrollHeight、scrollTop、scrollLeft、scrollIntoView\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"、scrollIntoViewIfNeeded\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getComputedStyle\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getBoundingClientRect\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"scrollTo\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\")])])])])]),t._v(\" \"),a(\"p\",[t._v(\"clientWidth = width+左右padding\")]),t._v(\" \"),a(\"p\",[t._v(\"clientHeigh = height + 上下padding\")]),t._v(\" \"),a(\"p\",[t._v(\"clientTop = boder.top(上边框的宽度)\")]),t._v(\" \"),a(\"p\",[t._v(\"clientLeft = boder.left(左边框的宽度)\")]),t._v(\" \"),a(\"p\",[t._v(\"offsetWidth = width + 左右padding + 左右boder\")]),t._v(\" \"),a(\"p\",[t._v(\"offsetHeith = height + 上下padding + 上下boder\")]),t._v(\" \"),a(\"p\",[t._v(\"offsetTop = 当前元素上边框外边缘到最近的已定位父级（offsetParent） 上边框 内边缘的 距离。如果父级都没有定位，则分别是到body 顶部 和左边的距离\")]),t._v(\" \"),a(\"p\",[t._v(\"Element.scrollIntoView() 方法让当前的元素滚动到浏览器窗口的可视区域内\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"Element.scrollIntoViewIfNeeded()\")]),t._v(\"方法也是用来将不在浏览器窗口的可见区域内的元素滚动到浏览器窗口的可见区域。但如果该元素已经在浏览器窗口的可见区域内，则不会发生滚动。\")]),t._v(\" \"),a(\"p\",[t._v(\"Element.scrollTo(x,y) 方法可把内容滚动到指定的坐标。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-重绘\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-重绘\"}},[t._v(\"#\")]),t._v(\" 2.重绘\")]),t._v(\" \"),a(\"p\",[t._v(\"当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等）,浏览器会将新样式赋予给元素并重新绘制它,这个过程称为重绘。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_3-性能影响\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-性能影响\"}},[t._v(\"#\")]),t._v(\" 3.性能影响\")]),t._v(\" \"),a(\"p\",[t._v(\"有时即使仅仅回流一个单一的元素,它的父元素以及任何跟随它的元素也会产生回流。现代浏览器会对频繁的回流或重绘操作进行优化：浏览器会维护一个队列,把所有引起回流和重绘的操作放入队列中,如果队列中的任务数量或者时间间隔达到一个阈值的,浏览器就会将队列清空,进行一次批处理,这样可以把多次回流和重绘变成一次。\")]),t._v(\" \"),a(\"p\",[t._v(\"当访问以下属性或方法时,浏览器会立刻清空队列:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"clientWidth、clientHeight、clientTop、clientLeftoffsetWidth、offsetHeight、offsetTop、offsetLeftscrollWidth、scrollHeight、scrollTop、scrollLeftwidth、heightgetComputedStyle\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getBoundingClientRect\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"因为队列中可能会有影响到这些属性或方法返回值的操作,即使你希望获取的信息与队列中操作引发的改变无关,浏览器也会强行清空队列,确保你拿到的值是最精确的。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_4-如何避免\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-如何避免\"}},[t._v(\"#\")]),t._v(\" 4.如何避免\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"css\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css\"}},[t._v(\"#\")]),t._v(\" CSS\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"避免使用 table 布局。\")]),t._v(\" \"),a(\"li\",[t._v(\"尽可能在 DOM 树的最末端改变 class。\")]),t._v(\" \"),a(\"li\",[t._v(\"避免设置多层内联样式。\")]),t._v(\" \"),a(\"li\",[t._v(\"将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"javascript\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript\"}},[t._v(\"#\")]),t._v(\" Javascript\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"避免频繁操作样式,最好一次性重写 style 属性,或者将样式列表定义为 class 并一次性更改 class 属性。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"避免频繁操作 DOM,创建一个 documentFragment,在它上面应用所有 DOM 操作,最后再把它添加到文档中。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"也可以先为元素设置 display: none,操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"避免频繁读取会引发回流/重绘的属性,如果确实需要多次使用,就用一个变量缓存起来。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"对具有复杂动画的元素使用绝对定位,使它脱离文档流,否则会引起父元素及后续元素频繁回流。\")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);","extractedComments":[]}