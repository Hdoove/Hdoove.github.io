{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{276:function(n,e,t){\"use strict\";t.r(e);var a=t(28),o=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"手写new原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#手写new原理\"}},[n._v(\"#\")]),n._v(\" 手写new原理\")]),n._v(\" \"),t(\"h4\",{attrs:{id:\"_1-new运算符都做了什么\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-new运算符都做了什么\"}},[n._v(\"#\")]),n._v(\" 1.new运算符都做了什么\")]),n._v(\" \"),t(\"ol\",[t(\"li\",[n._v(\"新建一个对象。\")]),n._v(\" \"),t(\"li\",[n._v(\"执行prototype连接。\")]),n._v(\" \"),t(\"li\",[n._v(\"将构造函数的作用域赋给新对象。\")]),n._v(\" \"),t(\"li\",[n._v(\"绑定this指向，执行构造函数中的代码。\")]),n._v(\" \"),t(\"li\",[n._v(\"返回这个对象。\")])]),n._v(\" \"),t(\"h4\",{attrs:{id:\"_2-简单实现\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-简单实现\"}},[n._v(\"#\")]),n._v(\" 2.简单实现\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"\\nfunction myNew(context) {\\n\\n    // 新建一个对象\\n    var res = new Object();\\n    \\n    // 获取传递的参数，第一个参数代表传入的构造函数，也就是这个即将创建的这个实例的构造函数，截取掉\\n    const args = [...arguments].slice(1);\\n  \\n    // 将创建的res的this绑定到传进来的这个构造函数context\\n    context.apply(res, args);\\n  \\n    return res;\\n}\\n\\nfunction Hdove(name) {\\n  this.name = name;\\n}\\n\\nvar example = myNew(Hdove, 'LJ');\\n\\nconsole.log(example); // {name: \\\"LJ\\\"}\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_3-继续改造\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-继续改造\"}},[n._v(\"#\")]),n._v(\" 3.继续改造\")]),n._v(\" \"),t(\"blockquote\",[t(\"p\",[n._v(\"来，我们先看一下真实的new操作符\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"\\nfunction Hdove(name) {\\n  this.name = name;\\n}\\n\\nHdove.prototype.age = 25;\\n\\nHdove.prototype.sayName = function() {\\n    console.log(this.name);\\n};\\n\\nvar obj = new Hdove('LJ');\\n\\nconsole.log(obj.name); // LJ\\nconsole.log(obj.age); // 25\\nobj.sayName(); // LJ\\n\\n\")])])]),t(\"blockquote\",[t(\"p\",[n._v(\"继续修改我们的代码\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"\\nfunction myNew(context) {\\n\\n    var res = new Object();\\n    \\n    // 判断构造函数上有没有原型，有的话进行添加\\n    if(context.prototype) {\\n        res.__proto__ = context.prototype\\n    }\\n    \\n    const args = [...arguments].slice(1);\\n  \\n    context.apply(res, args);\\n  \\n    return res;\\n}\\n\\nfunction Hdove(name) {\\n  this.name = name;\\n}\\n\\nHdove.prototype.age = 25;\\n\\nHdove.prototype.sayName = function() {\\n    console.log(this.name);\\n};\\n\\nvar example = myNew(Hdove, 'LJ');\\n\\nconsole.log(example);\\n\\n通过下图我们可以看出原型已经成功绑定了，完美\\n\\n\")])])]),t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/10/16f8e8bfe7dc0598?w=524&h=242&f=png&s=95258\",align:\"center\",width:\"300\"}}),n._v(\" \"),t(\"br\"),n._v(\" \"),t(\"blockquote\",[t(\"p\",[n._v(\"距离成功还有一步，我们加足马力\")])]),n._v(\" \"),t(\"h4\",{attrs:{id:\"_4-改造升级\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-改造升级\"}},[n._v(\"#\")]),n._v(\" 4.改造升级\")]),n._v(\" \"),t(\"blockquote\",[t(\"p\",[n._v(\"我们继续看一下原生的new 操作符\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"1.返回一个对象\\nfunction Hdove(name) {\\n  this.name = name;\\n  return {\\n    name: 'return出来的'\\n  }\\n}\\n\\nvar obj = new Hdove('LJ');  \\nconsole.log(obj); // {name: \\\"return出来的\\\"}\\n\\n2.返回基本类型\\nfunction Hdove(name) {\\n  this.name = name;\\n  return '123';\\n}\\n\\n\\nvar obj = new Hdove('LJ');  \\nconsole.log(obj); // {name: \\\"LJ\\\"}\\n\\n3.返回一个方法\\nfunction Hdove(name) {\\n  this.name = name;\\n  return function() {\\n    console.log(123);\\n  };\\n}\\n\\n\\nvar obj = new Hdove('LJ');  \\nconsole.log(obj); // function () { window.runnerWindow.proxyConsole.log(123); }\\n\\n\")])])]),t(\"p\",[n._v(\"有没有发现神奇的事情发生了，当我们在构造函数中返回一个对象类型A的时候，这个时候我们使用new操作符，实际上返回的就是这个A，反之，返回的是我们新建的这个对象，开始实现！\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"\\nfunction myNew(context) {\\n\\n    var res = new Object();\\n    \\n    // 判断构造函数上有没有原型，有的话进行添加\\n    if(context.prototype) {\\n        res.__proto__ = context.prototype\\n    }\\n    \\n    const args = [...arguments].slice(1);\\n  \\n    const ret = context.apply(res, args);\\n    \\n    // 判断ret 是不是object或者function，因为null也属于object，所以要单独排除\\n    if((typeof ret === 'object' || typeof ret === 'function') && ret !== null) {\\n      return ret;\\n    }\\n    return res;\\n}\\n\\nfunction Hdove1(name) {\\n  this.name = name;\\n}\\n\\nfunction Hdove2(name) {\\n  this.name = name;\\n  return {\\n    name: 'return出来的数据'\\n  }\\n}\\n\\nvar example1 = myNew(Hdove1, 'LJ');\\nvar example2 = myNew(Hdove2, 'LJ');\\n\\nconsole.log(example1); // { name: LJ }\\nconsole.log(example2); // { name: return出来的数据 }\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_5-完整版\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-完整版\"}},[n._v(\"#\")]),n._v(\" 5.完整版\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"\\nfunction myNew(context) {\\n\\n    var res = new Object();\\n    \\n    if(context.prototype) {\\n        res.__proto__ = context.prototype\\n    }\\n    \\n    const args = [...arguments].slice(1);\\n  \\n    const ret = context.apply(res, args);\\n    \\n    if((typeof ret === 'object' || typeof ret === 'function') && ret !== null) {\\n      return ret;\\n    }\\n    return res;\\n}\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_6-推荐阅读\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-推荐阅读\"}},[n._v(\"#\")]),n._v(\" 6.推荐阅读\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[t(\"a\",{attrs:{href:\"https://juejin.im/post/5e17f16f5188254d3f73c7df\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"都2020年了，你应该知道如何手写Call、Apply、Bind了吧\"),t(\"OutboundLink\")],1)]),n._v(\" \"),t(\"li\",[t(\"a\",{attrs:{href:\"https://juejin.im/post/5df1dccfe51d45582248d5ec\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"仿网易云音乐webApp\"),t(\"OutboundLink\")],1)]),n._v(\" \"),t(\"li\",[n._v(\"最近在研究Taro，然后基于Taro + TS + Hook + MongoDB + KeystoneJS 写了一个图像识别的小玩意，欢迎围观\")]),n._v(\" \"),t(\"li\")]),n._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/10/16f8eb3591acb917?w=344&h=344&f=jpeg&s=58223\",alt:\"\"}})])])}),[],!1,null,null,null);e.default=o.exports}}]);","extractedComments":[]}